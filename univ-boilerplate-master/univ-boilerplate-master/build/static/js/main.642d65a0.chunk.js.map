{"version":3,"sources":["app/components/Header.js","app/config/api.cofig.js","app/config/constants.js","app/services/link.service.js","app/store/actions/links.actions.js","app/components/SearchBar.js","app/components/modals/EditModal.js","app/components/ResultBoard.js","app/components/ContentWrapper.js","app/components/modals/ConfirmModal.js","app/components/Toaster.js","app/components/dataTable/EnhancedTableHead.js","app/components/dataTable/EnhancedTableToolbar.js","app/components/dataTable/EnhancedTable.js","app/store/reducers/links.reducers.js","app/store/reducers/message.reducer.js","app/store/reducers/tag.reducers.js","app/store/reducers/index.js","app/store/index.js","app/App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","alignContent","textAlign","marginTop","spacing","Header","classes","className","Typography","variant","component","API_URL","linkActionTypes","messageActionTypes","linkService","data","url","tag","Promise","resolve","reject","axios","get","params","then","respone","catch","error","response","post","id","patch","lists","delete","linkActions","dispatch","type","payload","message","success","length","count","padding","search","paddingLeft","paddingRight","paddingTop","paddingBottom","borderRadius","width","color","transition","backgroundColor","position","SearhBar","useState","searchKey","setSearchKey","searchType","setSearchType","useDispatch","onChangeType","useCallback","e","target","value","onChangeKey","handleSubmit","preventDefault","Grid","container","direction","justify","alignItems","item","sm","md","onSubmit","Paper","elevation","TextField","autoFocus","name","InputProps","disableUnderline","input","placeholder","InputLabelProps","shrink","bootstrapFormLabel","onChange","Select","inputProps","MenuItem","minHeight","form","margin","formControl","minWidth","formControlLabel","EditModal","open","setOpen","flag","isAdd","console","log","links","setLinks","comment","setComment","selectedTags","setSelectedTags","tags","useSelector","state","onChangeLinks","configTags","useMemo","map","label","onChangeComment","handleClose","addedTags","title","subheader","onChangeTag","Dialog","fullWidth","onClose","DialogTitle","DialogContent","DialogContentText","noValidate","FormControl","required","multiline","isMulti","options","DialogActions","Button","onClick","ResultBoard","React","setIsAdd","ContentWrapper","children","useEffect","Container","fixed","Transition","forwardRef","props","ref","Slide","ConfirmModal","deleteFn","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","Toaster","addToast","useToasts","info","appearance","autoDismiss","timeId","setTimeout","clearTimeout","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","property","event","visuallyHidden","useToolbarStyles","highlight","palette","secondary","main","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","setSelected","Toolbar","clsx","Tooltip","IconButton","aria-label","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","paper","marginBottom","table","cursor","textDecoration","border","clip","height","overflow","top","EnhancedTable","rows","onUpdateClick","link","action","createData","setOrder","setOrderBy","selected","TableContainer","Table","newSelecteds","n","TableBody","row","isItemSelected","indexOf","labelId","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","slice","handleClick","scope","window","goTo","Chip","style","initialState","isLoading","newState","findIndex","filter","includes","newArr","ele","rootReducer","combineReducers","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","App","autoDismissTimeout","placement","SearchBar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.642d65a0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignContent: 'center',\r\n        textAlign: 'center',\r\n        '& .header' : {\r\n            marginTop: theme.spacing(8)\r\n        }\r\n    }\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className=\"header\">\r\n                <Typography variant=\"h2\" component=\"p\">\r\n                    The Andrew Linkerator\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"p\">\r\n                    POWERFUL option for indexing URLs\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","export const API_URL = '/api';","export const linkActionTypes = {\r\n    FETCH_LINKS_REQUEST : \"FETCH_LINKS_REQUEST\",\r\n    FETCH_LINKS_SUCCESS : \"FETCH_LINKS_SUCCESS\",\r\n    FETCH_LINKS_FAILURE : \"FETCH_LINKS_FAILURE\",\r\n    FETCH_TAGS_REQUEST  : \"FETCH_TAGS_REQUEST\",\r\n    FETCH_TAGS_SUCCESS  : \"FETCH_TAGS_SUCCESS\",\r\n    FETCH_TAGS_FAILURE  : \"FETCH_TAGS_FAILURE\",\r\n\r\n    EDIT_LINK_REQUEST   : \"EDIT_LINK_REQUEST\",\r\n    ADD_LINK_SUCCESS    : \"ADD_LINK_SUCCESS\",\r\n    UPDATE_LINK_SUCCESS : \"UPDATE_LINK_SUCCESS\",\r\n    EDIT_LINK_FAILURE   : \"EDIT_LINK_FAILURE\",\r\n\r\n    DELETE_LINK_REQUEST : \"DELETE_LINK_REQUEST\",\r\n    DELETE_LINK_SUCCESS : \"DELETE_LINK_SUCCESS\",\r\n    DELETE_LINK_FAILURE : \"DELETE_LINK_FAILURE\",\r\n\r\n    COUNT_SUCCESS : \"COUNT_SUCCESS\",\r\n    COUNT_FAILURE : \"COUNT_FAILURE\",\r\n}\r\n\r\nexport const messageActionTypes = {\r\n    SET_MESSAGE      : 'SET_MESSAGE',\r\n    CLEAR_MESSAGE    : 'CLEAR_MESSAGE'\r\n}\r\n\r\nexport const  tagActionTypes = {\r\n    FETCH_TAGS_REQUEST : \"FETCH_TAGS_REQUEST\",\r\n    FETCH_TAGS_SUCCESS : \"FETCH_TAGS_SUCCESS\",\r\n    FETCH_TAGS_FAILURE : \"FETCH_TAGS_FAILURE\"\r\n}\r\n","import axios from 'axios';\r\nimport { API_URL } from '../config'\r\nconst getLinks = (data) => {\r\n    const url = data ? data.url : '';\r\n    const tag = data ? data.tag : '';\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(`${API_URL}/link`, {\r\n            params: {\r\n                url: url || '',\r\n                tag: tag || ''\r\n            }\r\n        })\r\n        .then(respone => {\r\n            const { data } = respone.data;\r\n            resolve(data)\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error);\r\n        })\r\n    })\r\n} \r\n\r\nconst getTags = () => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.get(`${API_URL}/tags`)\r\n        .then(respone => {\r\n            const { data } = respone.data;\r\n            resolve(data)\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error);\r\n        })\r\n    })\r\n} \r\n\r\nconst addLink = (data) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${API_URL}/link`, data)\r\n        .then(respone => {\r\n            const { data } = respone.data;\r\n            resolve(data)\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error);\r\n        })\r\n    })\r\n} \r\n\r\nconst updateLink = (data, id) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.patch(`${API_URL}/link/${id}`, data)\r\n        .then(respone => {\r\n            const { data } = respone.data;\r\n            resolve(data)\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error);\r\n        })\r\n    })\r\n} \r\n\r\nconst deleteLinks = (lists) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.delete(`${API_URL}/link`, {\r\n            data : {\r\n                id: lists\r\n            }\r\n        })\r\n        .then(respone => {\r\n            resolve(lists)\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error);\r\n        })\r\n    })\r\n}\r\n\r\nconst visitCounter = (id) => {\r\n    return new Promise((resolve, reject) => {\r\n        axios.post(`${API_URL}/visit`, {\r\n                id: id\r\n        })\r\n        .then(respone => {\r\n            const { data } = respone.data;\r\n            resolve(data);\r\n        })\r\n        .catch(error => {\r\n            const { data } = error.response;\r\n            reject(data.error);\r\n        })\r\n    })\r\n}\r\n\r\nexport const linkService = {\r\n    getLinks,\r\n    getTags,\r\n    addLink,\r\n    updateLink,\r\n    deleteLinks,\r\n    visitCounter\r\n}","import { linkActionTypes, messageActionTypes } from '../../config';\r\nimport { linkService } from '../../services';\r\n\r\nconst getLinks = (data) => (dispatch) => {\r\n    dispatch({type: linkActionTypes.FETCH_LINKS_REQUEST});\r\n    return linkService.getLinks(data)\r\n    .then(data => {\r\n        dispatch({\r\n            type: linkActionTypes.FETCH_LINKS_SUCCESS,\r\n            payload: data\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        dispatch({\r\n            type: linkActionTypes.FETCH_LINKS_FAILURE,\r\n            payload: error.message\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        });\r\n    })\r\n};\r\n\r\nconst getTags = () => (dispatch) => {\r\n    dispatch({type: linkActionTypes.FETCH_TAGS_REQUEST});\r\n    return linkService.getTags()\r\n    .then(data => {\r\n        dispatch({\r\n            type: linkActionTypes.FETCH_TAGS_SUCCESS,\r\n            payload: data\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        dispatch({\r\n            type: linkActionTypes.FETCH_TAGS_FAILURE,\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nconst addLink = (data) => (dispatch) => {\r\n    dispatch({type: linkActionTypes.EDIT_LINK_REQUEST});\r\n    return linkService.addLink(data)\r\n    .then(data => {\r\n        dispatch({\r\n            type: linkActionTypes.ADD_LINK_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: \"Successfully Link Added\",\r\n                success: true\r\n            }\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        dispatch({\r\n            type: linkActionTypes.EDIT_LINK_FAILURE,\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        });\r\n    })\r\n};\r\n\r\nconst updateLink = (data, id) => (dispatch) => {\r\n    dispatch({type: linkActionTypes.EDIT_LINK_REQUEST});\r\n    return linkService.updateLink(data, id)\r\n    .then(data => {\r\n        dispatch({\r\n            type: linkActionTypes.UPDATE_LINK_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: \"Successfully Link Updated\",\r\n                success: true\r\n            }\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        dispatch({\r\n            type: linkActionTypes.EDIT_LINK_FAILURE,\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        });\r\n    })\r\n};\r\n\r\nconst deleteLinks = (lists) => dispatch => {\r\n    dispatch({type: linkActionTypes.DELETE_LINK_REQUEST});\r\n    return linkService.deleteLinks(lists)\r\n    .then(data => {\r\n        dispatch({\r\n            type: linkActionTypes.DELETE_LINK_SUCCESS,\r\n            payload: data\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: `${data.length} data successfully deleted`,\r\n                success: true\r\n            }\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        dispatch({\r\n            type: linkActionTypes.DELETE_LINK_FAILURE,\r\n        });\r\n        dispatch({\r\n            type: messageActionTypes.SET_MESSAGE,\r\n            payload : {\r\n                message: error.message,\r\n                success: false\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nconst visitCounter = (id) => dispatch => {\r\n    return linkService.visitCounter(id)\r\n    .then(data => {\r\n        dispatch({\r\n            type: linkActionTypes.COUNT_SUCCESS,\r\n            payload: {\r\n                count: data,\r\n                id: id\r\n            }\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        dispatch({\r\n            type: linkActionTypes.COUNT_FAILURE,\r\n        });\r\n    })\r\n}\r\n\r\nexport const linkActions = {\r\n    getLinks,\r\n    getTags,\r\n    addLink,\r\n    updateLink,\r\n    deleteLinks,\r\n    visitCounter\r\n}","import React, { useState, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { makeStyles  } from '@material-ui/core/styles';\r\nimport { Typography, Grid, Paper, TextField, MenuItem } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport { linkActions } from '../store/actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: theme.spacing(7),\r\n        '& .sub-header' : {\r\n            textAlign: 'center',\r\n            padding: theme.spacing(2)\r\n        }\r\n    },\r\n    search: {\r\n        paddingLeft: '.8rem',\r\n        paddingRight: '.8rem',\r\n        paddingTop: '.65rem',\r\n        paddingBottom: '.65rem',\r\n        display: 'flex',\r\n        '& .input-wrapper' : {\r\n            borderRadius: \"0.5rem\",\r\n            width: '100%',\r\n            color: 'rgba(0, 0, 0, 0.97)',\r\n            transition: 'box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\r\n            backgroundColor: '#FFFFFF',\r\n            position: 'relative',\r\n        },\r\n        '& .type' : {\r\n            width: '100px'\r\n        }\r\n    }\r\n}));\r\n\r\nconst SearhBar = () => {\r\n    const classes = useStyles();\r\n    const [searchKey, setSearchKey] = useState('');\r\n    const [searchType, setSearchType] = useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeType = useCallback(\r\n        (e) => {\r\n            setSearchType(e.target.value)\r\n        },\r\n        [searchType],\r\n    );\r\n\r\n    const onChangeKey = useCallback(\r\n        (e) => {\r\n            setSearchKey(e.target.value)\r\n        },\r\n        [searchKey],\r\n    );\r\n\r\n    const handleSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        const data = searchType ? { tag: searchKey } : { url: searchKey } ;\r\n        dispatch(linkActions.getLinks(data));\r\n    }, [searchType, searchKey]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item sm={12} md={12}>\r\n                    <Typography variant=\"h6\" component=\"p\" className=\"sub-header\">\r\n                        Enter a Search Term\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item md={3} sm={2}>\r\n                </Grid>\r\n                <Grid item md={6} sm={8}>\r\n                    <form onSubmit={handleSubmit} className={classes.search}>\r\n                        <Paper className=\"input-wrapper\" elevation={1}>\r\n                            <TextField \r\n                                autoFocus={false}\r\n                                name=\"search\"\r\n                                className=\"flex-1 w-100\"\r\n                                InputProps={{\r\n                                    disableUnderline: true,\r\n                                    classes : {\r\n                                        root : \"flex flex-grow flex-no-shrink ml-12 mr-28 my-8 text-12\",\r\n                                        input: \"\"\r\n                                    },\r\n                                    placeholder     : \"Search the links\"\r\n                                }}\r\n                                InputLabelProps={{\r\n                                    shrink   : false,\r\n                                    className: classes.bootstrapFormLabel\r\n                                }}\r\n                                value={searchKey}\r\n                                onChange={onChangeKey}\r\n                            />\r\n                        </Paper>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item md={3} sm={2} className={classes.search}>\r\n                    <Paper className=\"input-wrapper type\" elevation={1}>\r\n                        <Select\r\n                            className=\"flex-1 w-100\"\r\n                            disableUnderline \r\n                            inputProps={{\r\n                                classes : {\r\n                                    root : \"flex flex-grow flex-no-shrink ml-12 mr-28 my-8 text-9 pt-15\",\r\n                                    input: \"\"\r\n                                }\r\n                            }}\r\n                            value={searchType}\r\n                            onChange={onChangeType}\r\n                        >\r\n                            <MenuItem value={0}>Link</MenuItem>\r\n                            <MenuItem value={1}>Tag</MenuItem>\r\n                        </Select>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearhBar;","import React, { useState, useCallback, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { TextField } from '@material-ui/core';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { linkActions } from '../../store/actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .content-wrapper' : {\r\n            minHeight: '400px',\r\n        }\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: 'auto',\r\n        width: '70%'\r\n    },\r\n    formControl: {\r\n        marginTop: theme.spacing(2),\r\n        minWidth: 200,\r\n    },\r\n    formControlLabel: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst EditModal = ({open, setOpen, isAdd: flag}) => {\r\n    const { isAdd, id } = flag;\r\n    console.log(id);\r\n    const classes = useStyles();\r\n    // const initLinks = '', initComment = '';\r\n    // const initTags = [];\r\n    // const { linkState } = useSelector(state => state.links)\r\n    const [links, setLinks] = useState('');\r\n    const [comment, setComment] = useState('');\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const { tags } = useSelector(state => state.tags);\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeLinks = useCallback(\r\n        (e) => {\r\n            setLinks(e.target.value);\r\n        },\r\n        [links],\r\n    );\r\n\r\n    const configTags = useMemo(() => {\r\n        return tags.map(tag => ({\r\n                value: tag.name,\r\n                label: tag.name\r\n            }))\r\n    }, [tags]);\r\n\r\n    const onChangeComment = useCallback((e) => {\r\n        setComment(e.target.value);\r\n    }, [comment]);\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleSubmit = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            const addedTags = selectedTags.map(tag => {\r\n                return {\r\n                    name: tag.value\r\n                }\r\n            })\r\n            if(isAdd) {\r\n                dispatch(linkActions.addLink({\r\n                    url: links,\r\n                    comment: comment,\r\n                    tags: addedTags\r\n                }));\r\n            } {\r\n                dispatch(linkActions.updateLink({\r\n                    url: links,\r\n                    comment: comment,\r\n                    tags: addedTags\r\n                }, id));\r\n            }\r\n            handleClose();\r\n        },\r\n        [links, comment, selectedTags],\r\n    );\r\n    const title = isAdd ? 'ADD LINKS' : 'UPDATE LINKS';\r\n    const subheader = isAdd ? 'You can submit your new Bookmark.' : 'You can update your Bookmark.'\r\n    const onChangeTag = useCallback((selectedTags) => {\r\n        setSelectedTags(selectedTags)\r\n    }, [selectedTags])\r\n\r\n    return (\r\n        <div >\r\n            <Dialog\r\n                fullWidth={true}\r\n                open={open}\r\n                onClose={handleClose}\r\n                className={classes.root}\r\n            >\r\n                <DialogTitle id=\"max-width-dialog-title\">{title}</DialogTitle>\r\n                    <DialogContent className=\"content-wrapper\">\r\n                        <DialogContentText className=\"subheader\">\r\n                            {subheader}\r\n                        </DialogContentText>\r\n                        <form className={classes.form} noValidate>\r\n                            <FormControl className={classes.formControl}>\r\n                                <TextField \r\n                                    label=\"Link Url\"\r\n                                    name=\"link_url\"\r\n                                    variant=\"outlined\"\r\n                                    value={links}\r\n                                    onChange={onChangeLinks}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl}>\r\n                                <TextField \r\n                                    label=\"comment\"\r\n                                    name=\"comment\"\r\n                                    variant=\"outlined\"\r\n                                    multiline={true}\r\n                                    value={comment}\r\n                                    onChange={onChangeComment}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl}>\r\n                                <CreatableSelect\r\n                                    isMulti\r\n                                    onChange={onChangeTag}\r\n                                    options={configTags}\r\n                                />\r\n                            </FormControl>\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" variant=\"contained\" onClick={handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                    </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditModal;","import React, { useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles  } from '@material-ui/core/styles';\r\nimport { Typography, Grid, Button, Paper, TextField, MenuItem } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport { linkActions } from '../store/actions';\r\nimport EditModal from './modals/EditModal';\r\nimport { EnhancedTable } from '../components';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst ResultBoard = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [isAdd, setIsAdd] = React.useState({isAdd: true});\r\n    const handleClickOpen = () => {\r\n        setIsAdd({isAdd: true});\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-end\"\r\n                alignItems=\"center\"\r\n            >\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    Add Link\r\n                </Button>\r\n                <Grid item sm={12} md={12}>\r\n                    <EnhancedTable setOpen={setOpen} setIsAdd={setIsAdd}/>\r\n                </Grid>\r\n            </Grid>\r\n            <EditModal open={open} setOpen={setOpen} isAdd={isAdd}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultBoard;","import React, { useEffect } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { linkActions } from '../store/actions';\r\n\r\nconst ContentWrapper = ({children}) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        dispatch(linkActions.getLinks());\r\n        dispatch(linkActions.getTags());\r\n    }, []);\r\n\r\n    return (\r\n        <Container fixed>\r\n            { children }\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default ContentWrapper;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ConfirmModal({open, setOpen, deleteFn}) {\r\n    // const [open, setOpen] = React.useState(false);\r\n\r\n    const confirm = () => {\r\n        deleteFn();\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Do you really want to delete the links?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" variant=\"contained\">\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={confirm} color=\"primary\" variant=\"contained\">\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useToasts } from 'react-toast-notifications'\r\nimport { messageActionTypes } from '../config';\r\n\r\nconst Toaster = ({children}) => {\r\n\r\n    const { addToast } = useToasts();\r\n    const dispatch = useDispatch();\r\n\r\n    const { message, success, info } = useSelector(state => state.message);\r\n    useEffect(() => {\r\n        if(!message) {\r\n            return;\r\n        }\r\n        addToast(message, {\r\n            appearance: info ? 'warning' : (success ? 'success' : 'error'),\r\n            autoDismiss: true\r\n        })\r\n        const timeId = setTimeout(() => dispatch({type: messageActionTypes.CLEAR_MESSAGE}), 5000)\r\n        return () => {\r\n            clearTimeout(timeId);\r\n        }\r\n    }, [message]);\r\n    \r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Toaster;","import React from 'react';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\n\r\nconst headCells = [\r\n    { id: 'url', numeric: false, disablePadding: true, label: 'Link' },\r\n    { id: 'comment', numeric: false, disablePadding: false, label: 'Comment' },\r\n    { id: 'count', numeric: true, disablePadding: false, label: 'Count' },\r\n    { id: 'tags', numeric: false, disablePadding: false, label: 'Tags' },\r\n    { id: 'action', numeric: false, disablePadding: false, label: 'Edit' },\r\n];\r\n\r\n/**\r\n * \r\n * @param {*} param0 \r\n * Enhanced Table Header\r\n */\r\n\r\nconst EnhancedTableHead = (props) => {\r\n    const { \r\n        classes, \r\n        onSelectAllClick, \r\n        order, \r\n        orderBy, \r\n        numSelected, \r\n        rowCount, \r\n        onRequestSort \r\n    } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align='center'\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                                ) : null\r\n                            }\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nexport default EnhancedTableHead;","import React, {useCallback} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { linkActions } from '../../store/actions';\r\nimport ConfirmModal from '../modals/ConfirmModal';\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    }\r\n}));\r\n  \r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected, setSelected } = props;\r\n    const dispatch = useDispatch();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    // const handleClickOpen = () => {\r\n    //     setOpen(true);\r\n    // };\r\n    const deleteFn = useCallback(\r\n        () => {\r\n            setSelected([]);\r\n            dispatch(linkActions.deleteLinks(numSelected))\r\n        },\r\n        [numSelected],\r\n    )\r\n\r\n    const handleDelete = () => {\r\n        setOpen(true);\r\n    }\r\n    return (\r\n        <>\r\n            <Toolbar\r\n                className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected.length > 0,\r\n                })}\r\n            >\r\n                {numSelected.length > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected.length} selected\r\n                </Typography>\r\n                ) : (\r\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                    Likerator\r\n                </Typography>\r\n                )}\r\n        \r\n                {numSelected.length > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"deleted\" onClick={handleDelete}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                ) : (\r\n                <Tooltip title=\"Filter list\">\r\n                    <IconButton aria-label=\"filter list\">\r\n                        <FilterListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                )}\r\n            </Toolbar>\r\n            <ConfirmModal \r\n                open={ open }\r\n                setOpen={ setOpen }\r\n                deleteFn={ deleteFn }\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EnhancedTableToolbar;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EnhancedTableHead from './EnhancedTableHead';\r\nimport EnhancedTableToolbar from './EnhancedTableToolbar';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { linkActions } from '../../store/actions';\r\n\r\nconst descendingComparator = (a, b, orderBy) => {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n}\r\n  \r\nconst createData = (links, onUpdateClick) => {\r\n    return links.map((link) => {\r\n        return {\r\n            id : link.id,\r\n            url: link.url,\r\n            comment: link.comment,\r\n            count: link.count,\r\n            tags: link.tags.map((tag) => tag.name),\r\n            action: <IconButton onClick={() => onUpdateClick(link.id)}>\r\n                        <EditIcon />\r\n                    </IconButton>\r\n        }\r\n    })\r\n};\r\n\r\nconst getComparator = (order, orderBy) => {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n\r\n  \r\nconst stableSort = (array, comparator) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n  \r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n         minWidth: 750,\r\n            '& .link-url' : {\r\n                '&:hover' : {\r\n                    cursor: 'pointer',\r\n                    textDecoration: 'underline'\r\n                }\r\n            }\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1\r\n    },\r\n}));\r\n\r\nconst EnhancedTable = ({setOpen, setIsAdd}) => {\r\n    const onUpdateClick = (id) => {\r\n        setIsAdd({isAdd: false, id: id});\r\n        setOpen(true);\r\n    }\r\n    const classes = useStyles();\r\n    const { links } = useSelector(state => state.links);\r\n    const dispatch = useDispatch();\r\n    const rows = createData(links, onUpdateClick);\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('count');\r\n    const [selected, setSelected] = React.useState([]);\r\n    // const [page, setPage] = React.useState(0);\r\n    // const [dense, setDense] = React.useState(false);\r\n    // const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  \r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const goTo = (url, id) => {\r\n        dispatch(linkActions.visitCounter(id));\r\n        window.open(`http://${url}`, '_blank');\r\n    }\r\n  \r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n.id);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n  \r\n    const handleClick = (event, url, id) => {\r\n        const selectedIndex = selected.indexOf(id);\r\n        let newSelected = [];\r\n    \r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, id);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n            selected.slice(0, selectedIndex),\r\n            selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n    \r\n        setSelected(newSelected);\r\n    };\r\n  \r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n  \r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar numSelected={selected} setSelected={setSelected}/>\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                            .map((row, index) => {\r\n                                const isItemSelected = isSelected(row.id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n            \r\n                                return (\r\n                                    <TableRow\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={row.url}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        <TableCell \r\n                                            padding=\"checkbox\"\r\n                                            onClick={(event) => handleClick(event, row.url, row.id)}\r\n                                        >\r\n                                            <Checkbox\r\n                                                checked={isItemSelected}\r\n                                                inputProps={{ 'aria-labelledby': labelId }}\r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                            <a onClick={() => goTo(row.url, row.id)} className=\"link-url\">\r\n                                                {row.url}\r\n                                            </a>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.comment}</TableCell>\r\n                                        <TableCell align=\"center\">{row.count}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {\r\n                                                row.tags &&\r\n                                                row.tags.map((tag, id) => {\r\n                                                    return (\r\n                                                        <div key={`${tag}-${id}`}>\r\n                                                            <Chip\r\n                                                                label={tag}\r\n                                                                color=\"primary\"\r\n                                                                variant=\"outlined\"\r\n                                                                style={{height: '18px'}}\r\n                                                            />\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.action}</TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EnhancedTable;","import { linkActionTypes } from '../../config';\r\nimport { linkActions } from '../actions';\r\n\r\nconst initialState = {\r\n    isLoading : false,\r\n    links     : []\r\n}\r\n\r\nconst links = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case linkActionTypes.FETCH_LINKS_REQUEST:\r\n        case linkActionTypes.EDIT_LINK_REQUEST:\r\n        case linkActionTypes.DELETE_LINK_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case linkActionTypes.FETCH_LINKS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                links: action.payload\r\n            }\r\n        case linkActionTypes.ADD_LINK_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                links: state.links.concat(action.payload)\r\n            }\r\n        case linkActionTypes.UPDATE_LINK_SUCCESS:\r\n            const newState = [...state.links];\r\n            newState[newState.findIndex(state => state.id === action.payload.id)] = \r\n            action.payload;\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                links: newState\r\n            }\r\n        \r\n        case linkActionTypes.DELETE_LINK_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                links: state.links.filter(link => !action.payload.includes(link.id))\r\n            }\r\n        case linkActionTypes.COUNT_SUCCESS:\r\n            const newArr = [...state.links];\r\n            newArr[newArr.findIndex((ele) => ele.id === action.payload.id)].count = action.payload.count;\r\n            return {\r\n                ...state,\r\n                links: newArr\r\n            }\r\n\r\n        case linkActionTypes.FETCH_LINKS_FAILURE:\r\n        case linkActionTypes.EDIT_LINK_FAILURE:\r\n        case linkActionTypes.DELETE_LINK_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default links;","import { messageActionTypes } from \"../../config\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case messageActionTypes.SET_MESSAGE:\r\n            return { message: payload.message, success: payload.success, info: payload.info };\r\n\r\n        case messageActionTypes.CLEAR_MESSAGE:\r\n            return { message: \"\" };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { linkActionTypes, messageActionTypes } from '../../config';\r\n\r\nconst initialState = {\r\n    isLoading : false,\r\n    tags     : []\r\n}\r\n\r\nconst tags = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case linkActionTypes.FETCH_TAGS_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case linkActionTypes.FETCH_TAGS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                tags: action.payload\r\n            }\r\n        case linkActionTypes.FETCH_TAGS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default tags;","import { combineReducers } from 'redux';\r\nimport links from './links.reducers';\r\nimport message from './message.reducer';\r\nimport tags from './tag.reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    links,\r\n    message,\r\n    tags\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from './reducers';\r\n\r\n/**\r\n * This middleware logs every action and states of the store.\r\n */\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        thunkMiddleware,\r\n        loggerMiddleware\r\n    )\r\n);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport { Header, SearchBar, ResultBoard, ContentWrapper, Toaster } from './components';\r\nimport { store } from './store';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <ToastProvider\r\n                autoDismiss\r\n                autoDismissTimeout={6000}\r\n                placement=\"top-center\"\r\n            >\r\n                <ContentWrapper>\r\n                    <Toaster>\r\n                        <Header />\r\n                        <SearchBar />\r\n                        <ResultBoard />\r\n                    </Toaster>\r\n                </ContentWrapper>\r\n            </ToastProvider>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app/App';\r\nimport './styles/index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}